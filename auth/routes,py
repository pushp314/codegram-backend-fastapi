# from fastapi import APIRouter, HTTPException
# from auth.models import User_Profile
# from auth.db import async_session_maker
# from sqlalchemy.future import select

# router = APIRouter()

# @router.get("/profile/{github_id}")
# async def get_user_profile(github_id: int):
#     async with async_session_maker() as session:
#         result = await session.execute(select(User_Profile).where(User_Profile.github_id == github_id))
#         profile = result.scalar_one_or_none()
#         if not profile:
#             raise HTTPException(status_code=404, detail="Profile not found")
#         return {c.name: getattr(profile, c.name) for c in profile.__table__.columns}